extends Node2D

var hex = [
"0xC0","0x33","0xBC","0x31","0x00","0x00","0xB0","0x32","0xAB","0x31","0x00","0x00","0xA0","0x33","0x9B","0x30",
"0x00","0x00","0x93","0x30","0x8B","0x33","0x00","0x00","0x83","0x30","0x7B","0x31","0x00","0x00","0x70","0x32",
"0x68","0x32","0x00","0x00","0x60","0x34","0x6B","0x2D","0x00","0x00","0x73","0x2D","0x7B","0x2E","0x00","0x00",
"0x80","0x36","0x80","0x36","0x00","0x01","0x83","0x2C","0x83","0x30","0x00","0x00","0x80","0x36","0x80","0x36",
"0x00","0x01","0x80","0x36","0x80","0x36","0x00","0x00","0x80","0x36","0x80","0x36","0x00","0x01","0x80","0x36",
"0x80","0x36","0x00","0x00","0x80","0x36","0x80","0x36","0x00","0x01","0x80","0x36","0x80","0x36","0x00","0x01",
"0x80","0x36","0x80","0x36","0x00","0x01","0x80","0x35","0x80","0x35","0x00","0x00","0x80","0x36","0x80","0x36",
"0x00","0x04","0x83","0x35","0x7B","0x30","0x00","0x00","0x73","0x30","0x6B","0x31","0x00","0x00","0x60","0x32",
"0x60","0x2C","0x00","0x00","0x6B","0x2C","0x73","0x2C","0x00","0x00","0x7B","0x2F","0x83","0x2F","0x00","0x00",
"0x8B","0x2E","0x93","0x2D","0x00","0x00","0x98","0x2E","0xA0","0x2E","0x00","0x00","0xAB","0x2D","0xB0","0x2F",
"0x00","0x00","0xBB","0x2C","0xC3","0x2C","0x00","0x00","0xC8","0x36","0xC8","0x2E","0x00","0x00","0xD3","0x2D",
"0xDB","0x2E","0x00","0x00","0xE0","0x36","0xE0","0x36","0x00","0x01","0xE0","0x36","0xE0","0x36","0x00","0x01",
"0xD8","0x32","0xD8","0x35","0x00","0x00","0xDB","0x2C","0xE0","0x36","0x00","0x00","0xE0","0x36","0xE0","0x36",
"0x00","0x02","0xE0","0x36","0xE0","0x36","0x00","0x02","0xE0","0x36","0xD8","0x34","0x00","0x00","0xE0","0x36",
"0xE0","0x36","0x00","0x01","0xE0","0x36","0xE0","0x36","0x00","0x01","0xE0","0x36","0xE0","0x36","0x00","0x04",
"0xD8","0x32","0xD8","0x35","0x00","0x00","0xD0","0x30","0xD0","0x2D","0x00","0x00","0xDB","0x2F","0xE0","0x36",
"0x00","0x00","0xE0","0x36","0xE0","0x36","0x00","0x00","0xE0","0x36","0xE0","0x36","0x00","0x01","0xE0","0x36",
"0xE0","0x36","0x00","0x00","0xE0","0x36","0xE0","0x36","0x00","0x01","0xE0","0x36","0xE0","0x36","0x00","0x00",
"0xE0","0x36","0xE0","0x36","0x00","0x01","0xE0","0x36","0xE0","0x36","0x00","0x04","0xE0","0x36","0xE0","0x36",
"0x00","0x02","0xD8","0x30","0xD3","0x30","0x00","0x00","0xD0","0x2C","0xD8","0x2E","0x00","0x00","0xE0","0x36",
"0xE0","0x36","0x00","0x01","0xE0","0x36","0xDB","0x33","0x00","0x00","0xD0","0x33","0xCB","0x33","0x00","0x00",
"0xC8","0x36","0xC8","0x36","0x00","0x01","0xC0","0x31","0xC0","0x36","0x00","0x00","0xC0","0x36","0xC0","0x36",
"0x00","0x01","0xB9","0x34","0xC0","0x35","0x00","0x00","0xC0","0x36","0xC0","0x36","0x00","0x01","0xB8","0x34",
"0xB8","0x33","0x00","0x00","0xB8","0x36","0xB8","0x36","0x00","0x01","0xB8","0x36","0xB8","0x36","0x00","0x01",
"0xB0","0x33","0xA8","0x34","0x00","0x00","0xB0","0x36","0xB0","0x36","0x00","0x04","0xB0","0x36","0xB0","0x36",
"0x00","0x02","0xA8","0x33","0xA0","0x32","0x00","0x00","0xA0","0x36","0xA0","0x36","0x00","0x01","0xA0","0x36",
"0xA0","0x36","0x00","0x01","0x98","0x34","0x98","0x30","0x00","0x00","0x98","0x2C","0x98","0x33","0x00","0x00",
"0x98","0x36","0x98","0x36","0x00","0x01","0x98","0x36","0x98","0x36","0x00","0x01","0x90","0x34","0x90","0x33",
"0x00","0x00","0x90","0x36","0x90","0x36","0x00","0x01","0x90","0x36","0x90","0x36","0x00","0x01","0x8B","0x32",
"0x83","0x31","0x00","0x00","0x7B","0x33","0x73","0x34","0x00","0x00","0x7B","0x2D","0x83","0x2E","0x00","0x00",
"0x8B","0x2D","0x93","0x2F","0x00","0x00","0x9B","0x2C","0xA3","0x2E","0x00","0x00","0xAB","0x2C","0xB3","0x2D",
"0x00","0x00","0xB8","0x36","0xB8","0x36","0x00","0x01","0xB8","0x36","0xB8","0x36","0x00","0x01","0xB3","0x32",
"0xAB","0x33","0x00","0x00","0xA0","0x34","0xA0","0x34","0x00","0x00","0xA8","0x36","0xA8","0x36","0x00","0x01",
"0xA3","0x32","0x9B","0x32","0x00","0x00","0x90","0x34","0x98","0x35","0x00","0x00","0x98","0x36","0x98","0x36",
"0x00","0x01","0x93","0x30","0x8B","0x33","0x00","0x00","0x83","0x32","0x7B","0x30","0x00","0x00","0x73","0x33",
"0x6B","0x31","0x00","0x00","0x60","0x34","0x6B","0x2E","0x00","0x00","0x70","0x35","0x70","0x2E","0x00","0x00",
"0x78","0x36","0x78","0x36","0x00","0x01","0x7B","0x2D","0x83","0x2D","0x00","0x00","0x88","0x36","0x88","0x36",
"0x00","0x02","0x8B","0x2F","0x93","0x2D","0x00","0x00","0x9B","0x2E","0xA0","0x35","0x00","0x00","0xA0","0x36",
"0xA0","0x36","0x00","0x01","0xA3","0x2C","0xA3","0x30","0x00","0x00","0x9B","0x33","0x90","0x33","0x00","0x00",
"0x90","0x36","0x90","0x36","0x00","0x01","0x90","0x36","0x90","0x36","0x00","0x04","0x88","0x30","0x88","0x2C",
"0x00","0x00","0x90","0x36","0x90","0x36","0x00","0x01","0x88","0x34","0x93","0x2E","0x00","0x00","0x9B","0x2D",
"0xA3","0x2F","0x00","0x00","0xAB","0x2C","0xB3","0x2E","0x00","0x00","0xBB","0x2F","0xC3","0x2C","0x00","0x00",
"0xC8","0x36","0xCB","0x2E","0x00","0x00","0xD0","0x36","0xD0","0x36","0x00","0x01","0xD0","0x35","0xC8","0x34",
"0x00","0x00","0xD0","0x36","0xD0","0x36","0x00","0x02","0xD0","0x36","0xD0","0x36","0x00","0x02","0xCB","0x31",
"0xC3","0x33","0x00","0x00","0xC0","0x36","0xC0","0x36","0x00","0x01","0xC0","0x36","0xBB","0x32","0x00","0x00",
"0xB0","0x30","0xB0","0x2E","0x00","0x00","0xB8","0x36","0xB3","0x33","0x00","0x00","0xAB","0x32","0xAB","0x2C",
"0x00","0x00","0xB3","0x2C","0xBB","0x2C","0x00","0x00","0xC3","0x2C","0xC8","0x36","0x00","0x00","0xC8","0x36",
"0xC8","0x36","0x00","0x01","0xC8","0x36","0xC8","0x35","0x00","0x00","0xC8","0x36","0xC0","0x34","0x00","0x00",
"0xCB","0x2C","0xD3","0x2C","0x00","0x00","0xDB","0x2C","0xDB","0x30","0x00","0x00","0xD8","0x36","0xD8","0x36",
"0x00","0x02","0xDB","0x2D","0xE0","0x36","0x00","0x00","0xE0","0x36","0xE0","0x36","0x00","0x04","0xD8","0x34",
"0xD8","0x30","0x00","0x00","0xD8","0x36","0xD8","0x36","0x00","0x01","0xD3","0x30","0xCB","0x32","0x00","0x00",
"0xC8","0x36","0xC8","0x36","0x00","0x01","0xC8","0x36","0xC8","0x36","0x00","0x04","0xCB","0x2C","0xD0","0x35",
"0x00","0x00","0xCB","0x30","0xC8","0x36","0x00","0x00","0xC0","0x33","0xBB","0x33","0x00","0x00","0xB3","0x31",
"0xAB","0x33","0x00","0x00","0xA0","0x34","0xA8","0x35","0x00","0x00","0xA8","0x36","0xA8","0x36","0x00","0x01",
"0xA8","0x36","0xA8","0x36","0x00","0x01","0xA8","0x36","0xA8","0x36","0x00","0x04","0xA8","0x36","0xA8","0x36",
"0x00","0x02","0xA8","0x35","0xA8","0x2C","0x00","0x00","0xB0","0x36","0xB0","0x36","0x00","0x01","0xB0","0x36",
"0xB0","0x36","0x00","0x01","0xB0","0x36","0xB0","0x36","0x00","0x01","0xB0","0x36","0xB0","0x36","0x00","0x00",
"0xA8","0x34","0xA8","0x31","0x00","0x00","0xA8","0x36","0xA8","0x36","0x00","0x02","0xA8","0x36","0xA8","0x36",
"0x00","0x01","0xA8","0x36","0xA8","0x36","0x00","0x04","0xAB","0x2F","0xB3","0x2E","0x00","0x00","0xBB","0x2D",
"0xC0","0x35","0x00","0x00","0xC0","0x36","0xC0","0x36","0x00","0x02","0xBB","0x31","0xB3","0x32","0x00","0x00",
"0xAB","0x31","0xA0","0x34","0x00","0x00","0xA3","0x31","0x9B","0x32","0x00","0x00","0x93","0x33","0x90","0x35",
"0x00","0x00","0x8B","0x32","0x80","0x34","0x00","0x00","0x8B","0x2C","0x93","0x2E","0x00","0x00","0x9B","0x2F",
"0xA3","0x2C","0x00","0x00","0xAB","0x2D","0xB3","0x2E","0x00","0x00","0xBB","0x2D","0xC3","0x2F","0x00","0x00",
"0xFF"]

# Called when the node enters the scene tree for the first time.
func _ready():
	var tilemap = $TileMap
	var pointer = 0
	var xpos = 1
	var tile_id = 1
	var rocket_id = 2
	var fuel_id = 3
	
	while not hex[pointer] == "0xFF":
		
		var d0 = hex[pointer+0] #further from the player
		var d1 = hex[pointer+1] # code of sprite
		var d2 = hex[pointer+2] #nearest to the player	
		var d3 = hex[pointer+3] # code of sprite
		var d4 = hex[pointer+4] # used to signify ceiling if not 0
		var d5 = hex[pointer+5] # used to reference ground target
		
		pointer +=6
				
		# need to read in every 0 and then skip upto 6th byte before reading next
		var todec1 = (d0.hex_to_int() & 248) / 8
		var todec2 = (d2.hex_to_int() & 248) / 8
		
		var todec3 = d5.hex_to_int()
		# 1 = rocket
		# 4 = mystery
		# 2 = fuel
		
		
		print(str(todec2) + ' ' + str(todec3))
		print(todec1)
		 
		
		tilemap.set_cell(xpos, todec1, tile_id)
		if not todec3 == 0:
			var tid = get_tile(todec3)
			tilemap.set_cell(xpos, todec1-2, tid )
		xpos += 1
		tilemap.set_cell(xpos, todec2, tile_id)
		xpos += 1
		
func get_tile(id):
	match id:
		1:
			return 2
		2:
			return 3
		4:
			return 4
		
